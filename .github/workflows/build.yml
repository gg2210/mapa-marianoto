name: Build APK

on:
  workflow_dispatch:  # Permite executar manualmente

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Tempo extra para compilar

    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Pega todos os arquivos

    - name: Listar arquivos (debug)
      run: ls -la && find . -name "*.png" | head -10

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Instalar dependências
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip openjdk-17-jdk zlib1g-dev libffi-dev libssl-dev unzip wget

    - name: Instalar Buildozer
      run: pip install buildozer

    - name: Configurar Buildozer
      run: |
        buildozer init
        # CONFIGURAÇÃO ESPECIAL PARA IMAGENS SOLTAS
        echo '
[app]
source.dir = .
source.main = main.py
source.include_exts = py,png,jpg,jpeg
requirements = python3, pygame
android.permissions = 
orientation = landscape
' > buildozer.spec

    - name: Build APK URGENTE
      run: |
        buildozer android debug 2>&1 | tee build.log
        # Verifica se o APK foi criado
        if [ -f bin/*.apk ]; then
          echo "✅ APK CRIADO COM SUCESSO!"
          ls -la bin/
        else
          echo "❌ FALHA - Verificando logs..."
          tail -100 build.log
          exit 1
        fi

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: apk-marianoto
        path: bin/*.apk
        if-no-files-found: error

    - name: Upload log
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: build.log
